diff -ur python_orig/Include/pymath.h python/Include/pymath.h
--- python_orig/Include/pymath.h	2013-07-11 12:24:48.007671000 -0400
+++ python/Include/pymath.h	2013-07-11 12:20:57.077169000 -0400
@@ -14,6 +14,7 @@
  *
  *Note: PC/pyconfig.h defines copysign as _copysign
  */
+#define HAVE_COPYSIGN
 #ifndef HAVE_COPYSIGN
 extern double copysign(double, double);
 #endif

+#define HAVE_ROUND
 #ifndef HAVE_ROUND
 extern double round(double);
 #endif
diff -ur python_orig/Modules/posixmodule.c python/Modules/posixmodule.c
--- python_orig/Modules/posixmodule.c	2013-07-11 12:12:47.468557000 -0400
+++ python/Modules/posixmodule.c	2013-07-11 12:20:12.823671000 -0400
@@ -3716,2 +3716,2 @@
 #define DEV_PTY_FILE "/dev/ptmx"
 #endif

+#undef HAVE_FORKPTY
+#undef HAVE_OPENPTY
 #if defined(HAVE_OPENPTY) || defined(HAVE_FORKPTY) || defined(HAVE_DEV_PTMX)
 #ifdef HAVE_PTY_H
 #include <pty.h>
diff -ur python_orig/Python/dynload_shlib.c python/Python/dynload_shlib.c
--- python_orig/Python/dynload_shlib.c	2013-07-11 12:12:46.117677000 -0400
+++ python/Python/dynload_shlib.c	2013-07-11 12:23:47.884471000 -0400
@@ -91,8 +91,12 @@
         for (i = 0; i < nhandles; i++) {
             if (statb.st_dev == handles[i].dev &&
                 statb.st_ino == handles[i].ino) {
+#if 0
                 p = (dl_funcptr) dlsym(handles[i].handle,
                                        funcname);
+#else
+                p = NULL;
+#endif
                 return p;
             }
         }
@@ -127,2 +131,2 @@
     pathname = pathbuf;
 #endif

+#if 0
     handle = dlopen(pathname, dlopenflags);
+#else
+    handle = NULL;
+#endif

     if (handle == NULL) {
+#if 0
         const char *error = dlerror();
+#else
+        const char *error = NULL;
+#endif
         if (error == NULL)
             error = "unknown dlopen() error";
         PyErr_SetString(PyExc_ImportError, error);
@@ -138,6 +150,10 @@
     }
     if (fp != NULL && nhandles < 128)
         handles[nhandles++].handle = handle;
+#if 0
     p = (dl_funcptr) dlsym(handle, funcname);
+#else
+    p = NULL;
+#endif
     return p;
 }
